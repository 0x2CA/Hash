#!/bin/bash
# 初始化
v=0
m=0
s=0
u=0
c=0
f=0
error=0
file=""
help(){
	echo -e "\033[1;32m帮助\033[0m："
	echo -e "	[\033[1;31m必选\033[0m]"
	echo -e "		[\033[1;36m-u\033[0m|\033[1;36m-c\033[0m]	   \033[1;32m建立\033[1;31m|\033[1;32m验证\033[0m"
	echo -e "		[\033[1;36m-m\033[0m|\033[1;36m-s\033[0m]	    \033[1;32mmd5\033[1;31m|\033[1;32msha1\033[0m"
	echo -e "		[\033[1;36m-f File\033[0m]	\033[1;32m位置\033[0m"
	echo -e "	[\033[1;31m可选\033[0m]"
	echo -e "		[\033[1;36m-v\033[0m]	\033[1;32m显示过程\033[0m"
	echo -e "	[\033[1;31m其他\033[0m]"
	echo -e "		[\033[1;36m-h\033[0m]	\033[1;32m帮助\033[0m"
	echo -e "\033[1;32m版本\033[0m："
	echo -e "	\033[1;31mBeta\033[0m:\033[1;36m1.45.1\033[0m"
}
check(){
	if [ $# == 0 ]; then
		help
		exit 1
	fi
	while getopts :vmsuchf: opt
	do
		case $opt in
			v)
				v=1
				;;
			m)
				m=1
				;;
			s)
				s=1
				;;
			u)
				u=1
				;;
			c)
				c=1
				;;
			h)
				help
				exit 0
				;;
			f)
				f=1
				file=$OPTARG
				;;
			\?) 
				echo -e "\033[1;31m未知选项\033[0m"
				echo -e "\033[1;36m输入\033[0m\"\033[1;31m-h\033[0m\"\033[1;36m查看帮助\033[0m"
				exit 1
				;;
		esac
	done
	if [ $u = 0 -a $c = 0 ]; then
		echo -e "\033[1;31m缺少必选\033[0m:	[\033[1;36m-u\033[0m|\033[1;36m-c\033[0m]	   \033[1;32m建立\033[1;31m|\033[1;32m验证\033[0m"
		((error+=1)) 
	fi
	if [ $m = 0 -a $s = 0 ]; then
		echo -e "\033[1;31m缺少必选\033[0m:	[\033[1;36m-m\033[0m|\033[1;36m-s\033[0m]	    \033[1;32mmd5\033[1;31m|\033[1;32msha1\033[0m"
		((error+=1)) 
	fi	
	if [ $u = 1 -a $c = 1 ]; then
		echo -e "\033[1;31m选项矛盾\033[0m:  	[\033[1;36m-u\033[0m|\033[1;36m-c\033[0m]	   \033[1;32m建立\033[1;31m|\033[1;32m验证\033[0m"
		((error+=1))
	fi
	if [ $f = 0 ]; then
		echo -e "\033[1;31m必选错误\033[0m:	[\033[1;36m-f File\033[0m]	\033[1;32m位置\033[0m"
		((error+=1))
	fi
	if [ $error != 0 ]; then
		echo -e "\033[1;36m输入\033[0m\"\033[1;31m-h\033[0m\"\033[1;36m查看帮助\033[0m"
		exit 1
	fi
}
check $@
if [ ! -d "$file" ]; then
	echo -e "\033[1;31m错误\033[0m：\033[1;36m位置不存在\033[0m"
	exit 1
fi
cd $file
if [ $u = 1 ]; then
	echo -e "\033[1;31m开始建立验证:\033[0m"	
	if [ $m = 1 ]; then
		if [ -f ".md5" ]; then
			rm .md5
		fi
		echo -e "\033[1;32m正在建立md5验证:\033[0m"
		if [ $v = 1 ]; then
			echo -en "\033[1;36m"
			find . -type f ! -name ".md5" ! -name ".sha1" -exec md5sum {} \; > .md5
			p=$?
			cat ".md5"
			echo -e "\033[0m"
		else
			find . -type f ! -name ".md5" ! -name ".sha1" -exec md5sum {} \; > .md5
			p=$?
		fi
		if [ $? = 0 ]; then
			echo -e "\033[1;32m建立md5验证成功！\033[0m"
		else
			echo -e "\033[1;32m建立md5验证失败！\033[0m"
			echo -e "\033[1;31m建立验证失败！\033[0m"
			exit 1
		fi
	fi
	if [ $s = 1 ]; then
		if [ -f ".sha1" ]; then
			rm .sha1
		fi
		echo -e "\033[1;32m正在建立sha1验证:\033[0m"
		if [ $v = 1 ]; then
			echo -en "\033[1;36m"
			find . -type f ! -name ".md5" ! -name ".sha1" -exec sha1sum {} \; > .sha1
			p=$?
			cat ".sha1"
			echo -e "\033[0m"
		else
			find . -type f ! -name ".md5" ! -name ".sha1" -exec sha1sum {} \; > .sha1
			p=$?
		fi
		if [ $p = 0 ]; then
			echo -e "\033[1;32m建立sha1验证成功！\033[0m"
		else
			echo -e "\033[1;32m建立sha1验证失败！\033[0m"
			echo -e "\033[1;31m建立验证失败！\033[0m"
			exit 1
		fi
	fi
	echo -e "\033[1;31m建立验证成功！\033[0m"
fi
if [ $c = 1 ]; then
	echo -e "\033[1;31m开始验证:\033[0m"
	if [ $m = 1 ]; then
		if [ ! -f ".md5" ]; then
			echo -e "\033[1;31m错误:\033[0m\033[1;32m没有建立md5验证！\033[0m"
			echo -e "\033[1;31m验证失败！\033[0m"
			exit 1
		fi
		echo -e "\033[1;32m正在md5验证:\033[0m"
		if [ $v = 1 ]; then
			echo -en "\033[1;36m"
			md5sum -c .md5 
			p=$?
			echo -e "\033[0m"
		else
			md5sum -c .md5 --quiet
			p=$?
		fi
		if [ $p = 0 ]; then
			echo -e "\033[1;32mmd5验证成功！\033[0m"
		else
			echo -e "\033[1;32mmd5验证失败！\033[0m"
			echo -e "\033[1;31m验证失败!\033[0m"
			exit 1
		fi
	fi
	if [ $s = 1 ]; then
		if [ ! -f ".sha1" ]; then
			echo -e "\033[1;31m错误:\033[0m\033[1;32m没有建立sha1验证！\033[0m"
			echo -e "\033[1;31m验证失败！\033[0m"
			exit 1
		fi
		echo -e "\033[1;32m正在sha1验证:\033[0m"
		if [ $v = 1 ]; then
			echo -en "\033[1;36m"
			sha1sum -c .sha1 
			p=$?
			echo -e "\033[0m"
		else
			sha1sum -c .sha1 --quiet 
			p=$?
		fi
		if [ $p = 0 ]; then
			echo -e "\033[1;32msha1验证成功！\033[0m"
		else
			echo -e "\033[1;32msha1验证失败！\033[0m"
			echo -e "\033[1;31m验证失败!\033[0m"
			exit 1
		fi
	fi
	echo -e "\033[1;31m验证成功！\033[0m"
fi
